package com.ayantsoft.trmsv3.hibernate.pojo;
// Generated 14 Sep, 2017 12:05:51 PM by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * UserProfile generated by hbm2java
 */
@Entity
@Table(name = "user_profile", catalog = "trmsv2_hr_sales")
public class UserProfile implements java.io.Serializable {

	/**
	 * serialVersionUID
	 */
	private static final long serialVersionUID = 5749659117555088133L;
	
	private Integer userId;
	private String userFullName;
	private String userEmail;
	private String userPhoneNo;
	private String userName;
	private String password;
	private String userEmailPassword;
	private String userCategory;
	private String signature;
	private String priority;
	private Set<MailDetails> mailDetailses = new HashSet<MailDetails>(0);
	private Set<PaymentTransaction> paymentTransactions = new HashSet<PaymentTransaction>(0);
	private Set<Role> roles = new HashSet<Role>(0);
	private Set<SalesFollowUp> salesFollowUps = new HashSet<SalesFollowUp>(0);
	private Set<Priority> priorities = new HashSet<Priority>(0);
	private Set<HrFollowUp> hrFollowUps = new HashSet<HrFollowUp>(0);
	private Set<InterviewSchedule> interviewSchedules = new HashSet<InterviewSchedule>(0);

	public UserProfile() {
	}

	public UserProfile(String userFullName, String userEmail) {
		this.userFullName = userFullName;
		this.userEmail = userEmail;
	}

	public UserProfile(String userFullName, String userEmail, String userPhoneNo, String userName, String password,
			String userEmailPassword, String userCategory, String signature, String priority,
			Set<MailDetails> mailDetailses, Set<PaymentTransaction> paymentTransactions, Set<Role> roles,
			Set<SalesFollowUp> salesFollowUps, Set<Priority> priorities, Set<HrFollowUp> hrFollowUps,
			Set<InterviewSchedule> interviewSchedules) {
		this.userFullName = userFullName;
		this.userEmail = userEmail;
		this.userPhoneNo = userPhoneNo;
		this.userName = userName;
		this.password = password;
		this.userEmailPassword = userEmailPassword;
		this.userCategory = userCategory;
		this.signature = signature;
		this.priority = priority;
		this.mailDetailses = mailDetailses;
		this.paymentTransactions = paymentTransactions;
		this.roles = roles;
		this.salesFollowUps = salesFollowUps;
		this.priorities = priorities;
		this.hrFollowUps = hrFollowUps;
		this.interviewSchedules = interviewSchedules;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "user_id", unique = true, nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@Column(name = "user_full_name", nullable = false, length = 100)
	public String getUserFullName() {
		return this.userFullName;
	}

	public void setUserFullName(String userFullName) {
		this.userFullName = userFullName;
	}

	@Column(name = "user_email", nullable = false, length = 100)
	public String getUserEmail() {
		return this.userEmail;
	}

	public void setUserEmail(String userEmail) {
		this.userEmail = userEmail;
	}

	@Column(name = "user_phone_no", length = 100)
	public String getUserPhoneNo() {
		return this.userPhoneNo;
	}

	public void setUserPhoneNo(String userPhoneNo) {
		this.userPhoneNo = userPhoneNo;
	}

	@Column(name = "user_name", length = 100)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "password", length = 100)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "user_email_password", length = 100)
	public String getUserEmailPassword() {
		return this.userEmailPassword;
	}

	public void setUserEmailPassword(String userEmailPassword) {
		this.userEmailPassword = userEmailPassword;
	}

	@Column(name = "user_category", length = 45)
	public String getUserCategory() {
		return this.userCategory;
	}

	public void setUserCategory(String userCategory) {
		this.userCategory = userCategory;
	}

	@Column(name = "signature", length = 65535)
	public String getSignature() {
		return this.signature;
	}

	public void setSignature(String signature) {
		this.signature = signature;
	}

	@Column(name = "priority", length = 45)
	public String getPriority() {
		return this.priority;
	}

	public void setPriority(String priority) {
		this.priority = priority;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userProfile")
	public Set<MailDetails> getMailDetailses() {
		return this.mailDetailses;
	}

	public void setMailDetailses(Set<MailDetails> mailDetailses) {
		this.mailDetailses = mailDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userProfile")
	public Set<PaymentTransaction> getPaymentTransactions() {
		return this.paymentTransactions;
	}

	public void setPaymentTransactions(Set<PaymentTransaction> paymentTransactions) {
		this.paymentTransactions = paymentTransactions;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_has_role", catalog = "trmsv2_hr_sales", joinColumns = {
			@JoinColumn(name = "user_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "role_type", nullable = false, updatable = false) })
	public Set<Role> getRoles() {
		return this.roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userProfile")
	public Set<SalesFollowUp> getSalesFollowUps() {
		return this.salesFollowUps;
	}

	public void setSalesFollowUps(Set<SalesFollowUp> salesFollowUps) {
		this.salesFollowUps = salesFollowUps;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_profile_has_priority", catalog = "trmsv2_hr_sales", joinColumns = {
			@JoinColumn(name = "user_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "priority_id", nullable = false, updatable = false) })
	public Set<Priority> getPriorities() {
		return this.priorities;
	}

	public void setPriorities(Set<Priority> priorities) {
		this.priorities = priorities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userProfile")
	public Set<HrFollowUp> getHrFollowUps() {
		return this.hrFollowUps;
	}

	public void setHrFollowUps(Set<HrFollowUp> hrFollowUps) {
		this.hrFollowUps = hrFollowUps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userProfile")
	public Set<InterviewSchedule> getInterviewSchedules() {
		return this.interviewSchedules;
	}

	public void setInterviewSchedules(Set<InterviewSchedule> interviewSchedules) {
		this.interviewSchedules = interviewSchedules;
	}

}
